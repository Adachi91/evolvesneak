import { decompressFromBase64, compressToBase64 } from 'lz-string';
//const LZStringlib = require('lz-string');

export const testData = "";

//const GameObj;

/**
 *  returns Object after decompressing the save data.
 * @param {string} save - b64 encoded 
 * @returns {object} Game data.
 */
export function decodeSave(save) {
    save = save.replace(/\s+/g, "");
    const decompressedString = decompressFromBase64(save);

    const obj = JSON.parse(decompressedString);
    return obj;
}


/**
 * Encode modified data and return an array [Success, Obj | ErrorMsg]
 * @param {object} save 
 * @returns {[boolean, object]}
 */
export function encodeSave(save) {
    const result = [false, {}];

    try {
        const obj = JSON.parse(save);
        result[1] = compressToBase64(obj);
        result[0] = true;
    } catch(ex) {
        result[1] = { ErrorMessage: ex };
        result[0] = false;
    }

    return result;
}

/**
 * Checks to see if there has been a game version change when someone tries to load a save.
 * @param {string} ver 
 * @returns {boolean}
 */
export function versionCheck(ver) {
    const _version = ver === "1.3.3" ? true : false;

    return _version;
}


/**
 * Checks to make sure that the structure is proper.
 * @param {object} obj gameobj 
 * @returns {boolean}
 */
export function testGameDataIntegrity(obj) {
    let result = true;
    try {
        if(typeof obj !== "object") result = false;
        if(typeof obj.version !== "string") result = false;
        if(typeof obj.resource !== "object") result = false;
        return result;
    } catch(ex) {
        console.warn(`Could not verify GameObj structure: ${ex}`);
        return result;
    }
}

//const GameObj = decodeSave(test);

//let versionSanity = GameObj.version == "1.3.3" ? true : false;

//console.log(GameObj.version);